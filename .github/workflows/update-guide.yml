name: Update TV Guide

on:
  schedule:
    - cron: '30 13 * * *'  # Ejecuta todos los días a las 13:30 UTC
  workflow_dispatch:  # Permite ejecutar manualmente el workflow desde la interfaz de GitHub

jobs:
  update-guide:
    runs-on: ubuntu-latest  # El flujo de trabajo se ejecutará en un runner de Ubuntu

    steps:
      # Paso 1: Clonar el repositorio
      - name: Check out the repository
        uses: actions/checkout@v2  # Usamos la acción para clonar el repositorio

      # Paso 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2  # Configura la versión de Node.js
        with:
          node-version: '14'  # Usamos la versión 14 de Node.js

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install  # Instala las dependencias de Node.js

      # Paso 4: Ejecutar el script para filtrar el XML y crear el archivo JSON
      - name: Run the script to filter XML and create JSON
        run: node filter-xml.js  # Ejecuta el archivo filter-xml.js

      # Paso 5: Verificar que el archivo JSON se ha generado
      - name: Verificar el archivo generado
        run: |
          ls -la  # Muestra los archivos en el directorio para confirmar que programacion-hoy.json existe
          cat programacion-hoy.json  # Muestra el contenido del archivo JSON generado (opcional)

      # Paso 6: Verificar si el archivo JSON existe y tiene cambios
      - name: Verificar si el archivo JSON existe
        run: |
          if [ -f programacion-hoy.json ]; then
            echo "El archivo programacion-hoy.json existe."
          else
            echo "El archivo programacion-hoy.json NO fue generado."
            exit 1  # Si el archivo no fue generado, termina el flujo de trabajo con error
          fi

      # Paso 7: Verificar los cambios en Git
      - name: Verificar cambios en git
        run: git diff  # Muestra los cambios antes del commit

      # Paso 8: Hacer commit y push del archivo JSON actualizado
      - name: Commit and push the updated JSON file
        run: |
          git config --global user.name 'GitHub Actions'  # Configura el nombre del usuario de git
          git config --global user.email 'actions@github.com'  # Configura el email del usuario de git
          git add programacion-hoy.json  # Agrega el archivo JSON al índice
          git diff --cached --quiet || git commit -m 'Update programming for today'  # Si hay cambios, hace un commit
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main  # Hace push al repositorio usando el GITHUB_TOKEN
          
